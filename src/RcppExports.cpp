// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rational_fractions
DataFrame rational_fractions(const NumericVector& x, const NumericVector& uncertainty);
RcppExport SEXP _mami_codi_beaty_R_rational_fractions(SEXP xSEXP, SEXP uncertaintySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type uncertainty(uncertaintySEXP);
    rcpp_result_gen = Rcpp::wrap(rational_fractions(x, uncertainty));
    return rcpp_result_gen;
END_RCPP
}
// approximate_rational_fractions
DataFrame approximate_rational_fractions(NumericVector& x, const double x_ref, const double uncertainty, std::string dimension);
RcppExport SEXP _mami_codi_beaty_R_approximate_rational_fractions(SEXP xSEXP, SEXP x_refSEXP, SEXP uncertaintySEXP, SEXP dimensionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const double >::type x_ref(x_refSEXP);
    Rcpp::traits::input_parameter< const double >::type uncertainty(uncertaintySEXP);
    Rcpp::traits::input_parameter< std::string >::type dimension(dimensionSEXP);
    rcpp_result_gen = Rcpp::wrap(approximate_rational_fractions(x, x_ref, uncertainty, dimension));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mami_codi_beaty_R_rational_fractions", (DL_FUNC) &_mami_codi_beaty_R_rational_fractions, 2},
    {"_mami_codi_beaty_R_approximate_rational_fractions", (DL_FUNC) &_mami_codi_beaty_R_approximate_rational_fractions, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_mami_codi_beaty_R(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
